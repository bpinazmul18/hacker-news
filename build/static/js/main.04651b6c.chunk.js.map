{"version":3,"sources":["actions.js","reducer.js","context.js","SearchForm.js","Stories.js","Buttons.js","App.js","index.js"],"names":["SET_LOADING","SET_STORIES","REMOVE_STORY","HANDLE_PAGE","HANDLE_SEARCH","reducer","state","action","type","isLoading","hits","payload","nbPages","newHits","filter","story","objectID","query","page","nextPage","prevPage","Error","initialState","AppContext","React","createContext","AppProvider","children","useReducer","dispatch","fetchStories","url","a","fetch","response","json","data","console","log","useEffect","Provider","value","removeStory","id","handleSearch","handlePage","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","onChange","target","Stories","map","title","num_comments","points","author","href","rel","onClick","Buttons","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAaA,EAAc,cACdC,EAAc,cACdC,EAAe,eACfC,EAAc,cACdC,EAAgB,gBC2CdC,EAvCC,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,KAAKR,EACH,OAAO,2BAAKM,GAAZ,IAAmBG,WAAW,IAChC,KAAKR,EACH,OAAO,2BACFK,GADL,IAEEG,WAAW,EACXC,KAAMH,EAAOI,QAAQD,KACrBE,QAASL,EAAOI,QAAQC,UAE5B,KAAKV,EACH,IAAMW,EAAUP,EAAMI,KAAKI,QACzB,SAACC,GAAD,OAAWA,EAAMC,WAAaT,EAAOI,WAEvC,OAAO,2BAAKL,GAAZ,IAAmBI,KAAMG,IAC3B,KAAKT,EACH,OAAO,2BAAKE,GAAZ,IAAmBW,MAAOV,EAAOI,QAASO,KAAM,IAClD,KAAKf,EACH,GAAuB,QAAnBI,EAAOI,QAAmB,CAC5B,IAAIQ,EAAWb,EAAMY,KAAO,EAI5B,OAHIC,EAAWb,EAAMM,QAAU,IAC7BO,EAAW,GAEN,2BAAKb,GAAZ,IAAmBY,KAAMC,IAG3B,GAAuB,QAAnBZ,EAAOI,QAAmB,CAC5B,IAAIS,EAAWd,EAAMY,KAAO,EAI5B,OAHIE,EAAW,IACbA,EAAWd,EAAMM,QAAU,GAEtB,2BAAKN,GAAZ,IAAmBY,KAAME,IAE3B,MACF,QACE,MAAM,IAAIC,MAAJ,sBAAyBd,EAAOC,KAAhC,mB,OC/BNc,EAAe,CACnBb,WAAW,EACXC,KAAM,GACNO,MAAO,QACPC,KAAM,EACNN,QAAS,GAGLW,EAAaC,IAAMC,gBAEnBC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAA0BC,qBAAWvB,EAASiB,GAA9C,mBAAOhB,EAAP,KAAcuB,EAAd,KACMC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACnBH,EAAS,CAAErB,KAAMR,IADE,kBAIMiC,MAAMF,GAJZ,cAIXG,EAJW,gBAKEA,EAASC,OALX,OAKXC,EALW,OAOjBP,EAAS,CACPrB,KAAMP,EACNU,QAAS,CAAED,KAAM0B,EAAK1B,KAAME,QAASwB,EAAKxB,WAT3B,kDAYjByB,QAAQC,IAAR,MAZiB,0DAAH,sDAgClB,OAJAC,qBAAU,WACRT,EAAa,GAAD,OA3CK,wCA2CL,iBAAyBxB,EAAMW,MAA/B,iBAA6CX,EAAMY,SAC9D,CAACZ,EAAMY,KAAMZ,EAAMW,QAGpB,cAACM,EAAWiB,SAAZ,CACEC,MAAK,2BAAOnC,GAAP,IAAcoC,YAlBH,SAACC,GACnBd,EAAS,CAAErB,KAAMN,EAAcS,QAASgC,KAiBNC,aAdf,SAAC3B,GACpBY,EAAS,CAAErB,KAAMJ,EAAeO,QAASM,KAaO4B,WAV/B,SAACJ,GAClBZ,EAAS,CAAErB,KAAML,EAAaQ,QAAS8B,OAQvC,SAGGd,KAKMmB,EAAmB,WAC9B,OAAOC,qBAAWxB,ICjDLyB,EAfI,WACjB,MAAgCF,IAAxB7B,EAAR,EAAQA,MAAO2B,EAAf,EAAeA,aACf,OACE,uBAAMK,UAAU,cAAcC,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAjD,UACE,6CACA,uBACEH,UAAU,aACVzC,KAAK,OACLiC,MAAOxB,EACPoC,SAAU,SAACF,GAAD,OAAOP,EAAaO,EAAEG,OAAOb,cC8BhCc,EAtCC,WACd,MAAyCT,IAAjCrC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAMgC,EAAzB,EAAyBA,YACzB,OAAIjC,EACK,qBAAKwC,UAAU,YAGtB,yBAASA,UAAU,UAAnB,SACGvC,EAAK8C,KAAI,SAACzC,GACT,IAAQC,EAAuDD,EAAvDC,SAAUyC,EAA6C1C,EAA7C0C,MAAOC,EAAsC3C,EAAtC2C,aAAc3B,EAAwBhB,EAAxBgB,IAAK4B,EAAmB5C,EAAnB4C,OAAQC,EAAW7C,EAAX6C,OACpD,OACE,0BAAwBX,UAAU,QAAlC,UACE,oBAAIA,UAAU,QAAd,SAAuBQ,IACvB,oBAAGR,UAAU,OAAb,UACGU,EADH,cACqB,iCAAOC,EAAP,SADrB,IAC+CF,KAE/C,gCACE,mBACEG,KAAM9B,EACNkB,UAAU,YACVK,OAAO,SACPQ,IAAI,aAJN,uBAQA,wBACEb,UAAU,aACVc,QAAS,kBAAMrB,EAAY1B,IAF7B,yBAdUA,SCMTgD,EAjBC,WACd,MAAiDlB,IAAzCrC,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,KAAMN,EAAzB,EAAyBA,QAASiC,EAAlC,EAAkCA,WAClC,OACE,sBAAKI,UAAU,gBAAf,UACE,wBAAQgB,SAAUxD,EAAWsD,QAAS,kBAAMlB,EAAW,QAAvD,kBAGA,8BACG3B,EAAO,EADV,OACiBN,KAEjB,wBAAQqD,SAAUxD,EAAWsD,QAAS,kBAAMlB,EAAW,QAAvD,sBCCSqB,MAVf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.04651b6c.chunk.js","sourcesContent":["export const SET_LOADING = 'SET_LOADING'\nexport const SET_STORIES = 'SET_STORIES'\nexport const REMOVE_STORY = 'REMOVE_STORY'\nexport const HANDLE_PAGE = 'HANDLE_PAGE'\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH'\n","import {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from \"./actions\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state, isLoading: true };\n    case SET_STORIES:\n      return {\n        ...state,\n        isLoading: false,\n        hits: action.payload.hits,\n        nbPages: action.payload.nbPages,\n      };\n    case REMOVE_STORY:\n      const newHits = state.hits.filter(\n        (story) => story.objectID !== action.payload\n      );\n      return { ...state, hits: newHits };\n    case HANDLE_SEARCH:\n      return { ...state, query: action.payload, page: 0 };\n    case HANDLE_PAGE:\n      if (action.payload === \"inc\") {\n        let nextPage = state.page + 1;\n        if (nextPage > state.nbPages - 1) {\n          nextPage = 0;\n        }\n        return { ...state, page: nextPage };\n      }\n\n      if (action.payload === \"dec\") {\n        let prevPage = state.page - 1;\n        if (prevPage < 0) {\n          prevPage = state.nbPages - 1;\n        }\n        return { ...state, page: prevPage };\n      }\n      break;\n    default:\n      throw new Error(`No matching ${action.type} action type`);\n  }\n};\nexport default reducer;\n","import React, { useContext, useEffect, useReducer } from \"react\";\n\nimport {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from \"./actions\";\nimport reducer from \"./reducer\";\n\nconst API_ENDPOINT = \"https://hn.algolia.com/api/v1/search?\";\n\nconst initialState = {\n  isLoading: true,\n  hits: [],\n  query: \"react\",\n  page: 0,\n  nbPages: 0,\n};\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchStories = async (url) => {\n    dispatch({ type: SET_LOADING });\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      dispatch({\n        type: SET_STORIES,\n        payload: { hits: data.hits, nbPages: data.nbPages },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const removeStory = (id) => {\n    dispatch({ type: REMOVE_STORY, payload: id });\n  };\n\n  const handleSearch = (query) => {\n    dispatch({ type: HANDLE_SEARCH, payload: query });\n  };\n\n  const handlePage = (value) => {\n    dispatch({ type: HANDLE_PAGE, payload: value });\n  };\n\n  useEffect(() => {\n    fetchStories(`${API_ENDPOINT}query=${state.query}&page=${state.page}`);\n  }, [state.page, state.query]);\n\n  return (\n    <AppContext.Provider\n      value={{ ...state, removeStory, handleSearch, handlePage }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst SearchForm = () => {\n  const { query, handleSearch } = useGlobalContext();\n  return (\n    <form className=\"search-form\" onSubmit={(e) => e.preventDefault()}>\n      <h2>Hacker News</h2>\n      <input\n        className=\"form-input\"\n        type=\"text\"\n        value={query}\n        onChange={(e) => handleSearch(e.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\n\nimport { useGlobalContext } from \"./context\";\n\nconst Stories = () => {\n  const { isLoading, hits, removeStory } = useGlobalContext();\n  if (isLoading) {\n    return <div className=\"loading\"></div>;\n  }\n  return (\n    <section className=\"stories\">\n      {hits.map((story) => {\n        const { objectID, title, num_comments, url, points, author } = story;\n        return (\n          <article key={objectID} className=\"story\">\n            <h4 className=\"title\">{title}</h4>\n            <p className=\"info\">\n              {points} points by <span>{author} | </span> {num_comments}\n            </p>\n            <div>\n              <a\n                href={url}\n                className=\"read-link\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                read more\n              </a>\n              <button\n                className=\"remove-btn\"\n                onClick={() => removeStory(objectID)}\n              >\n                remove\n              </button>\n            </div>\n          </article>\n        );\n      })}\n    </section>\n  );\n};\n\nexport default Stories;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst Buttons = () => {\n  const { isLoading, page, nbPages, handlePage } = useGlobalContext();\n  return (\n    <div className=\"btn-container\">\n      <button disabled={isLoading} onClick={() => handlePage(\"dec\")}>\n        prev\n      </button>\n      <p>\n        {page + 1} of {nbPages}\n      </p>\n      <button disabled={isLoading} onClick={() => handlePage(\"inc\")}>\n        next\n      </button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport Stories from \"./Stories\";\nimport Buttons from \"./Buttons\";\nfunction App() {\n  return (\n    <>\n      <SearchForm />\n      <Buttons />\n      <Stories />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}